apply plugin: 'java'

configurations {
  ziparchive
}

dependencies {
    ziparchive "org.ballerinalang.googleapis.sheets:module-ballerinax-googleapis.sheets:${project.googleapisSheetsVersion}"
    ziparchive "org.ballerinalang.googleapis.drive:module-ballerinax-googleapis.drive:${project.gdriveVersion}"
    ziparchive "org.ballerinalang.twilio:module-ballerinax-twilio:${project.twilioVersion}"
    ziparchive "org.ballerinalang.googleapis.calendar:module-ballerinax-googleapis.calendar:${project.googleapisCalendarVersion}"
    ziparchive "org.ballerinalang.netsuite:module-ballerinax-netsuite:${project.netsuiteVersion}"
    ziparchive "org.ballerinalang.googleapis.gmail:module-ballerinax-googleapis.gmail:${project.googleapisGmailVersion}"
    ziparchive "io.ballerinax.slack:module-ballerinax-slack:${project.slackVersion}"
    ziparchive "io.ballerinax.webhook:module-ballerinax-github:${project.githubVersion}"
    ziparchive "org.ballerinalang.sf:module-ballerinax-sfdc:${project.sfdcVersion}"
    ziparchive "org.ballerinalang.azure_storage_service:module-ballerinax-azure-storage-service:${project.azureStorageVersion}"
}

repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ballerina-platform/module-ballerinax-twilio")
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ballerina-platform/module-ballerinax-googleapis.calendar")
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ballerina-platform/module-ballerinax-googleapis.drive")
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ballerina-platform/module-ballerinax-googleapis.sheets")
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ballerina-platform/module-ballerinax-slack")
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ballerina-platform/module-ballerinax-sfdc")
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ballerina-platform/module-ballerinax-github")
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ballerina-platform/module-ballerinax-googleapis.gmail")
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ballerina-platform/module-ballerinax-netsuite")
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ballerina-platform/module-ballerinax-azure-storage-service")
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
}

// Fetched dependencies will be unziped into .ballerina directory
def unzippedDir = new File(System.getProperty("user.home"), "/.ballerina/repositories/central.ballerina.io/")

task unzip(type: Copy) {
    configurations.ziparchive.asFileTree.each {
        from(zipTree(it))
    }
    into unzippedDir
    //into file ("${project.projectDir}/laki/bala")
}

build.dependsOn unzip
